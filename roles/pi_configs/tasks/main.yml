---
# tasks file for pi_configs

- block:

  - name: "Backup /boot/cmdline.txt to root on Pi ({{ ansible_host }})"
    ansible.builtin.copy :
      src: /boot/cmdline.txt
      dest: /root/cmdline.txt.orig
      mode: '0440'
      remote_src: yes
      force: no
    # when: pi_image_setup_cgroup is defined and pi_image_setup_cgroup is True
    become: True
    tags:
      - configure
      - cgroup

  - name: Enable cgroup on Pi
    ansible.builtin.command:
      cmd: sed  's/$/ cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory swapaccount=1/'  /boot/cmdline.txt
    # when: pi_image_setup_cgroup is defined and pi_image_setup_cgroup is True
    become: True
    
    tags:
      - configure
      - cgroup

  # .............................................
  # - block: 
  #   - name: Get WiFi country
  #     become: true
  #     ansible.builtin.command: 
  #       cmd: "raspi-config nonint get_wifi_country || UNK "
  #     register: current_wifi_country
  #     changed_when: False
  #     ignore_errors: True

  #   - debug:
  #       var: current_wifi_country
 
  #   - name: set WiFi country
  #     become: true
  #     ansible.builtin.command: 
  #       cmd: "raspi-config nonint do_wifi_country {{ wifi_country }}"
  #     changed_when: False
  #     ignore_errors: True
  #     when:  current_wifi_country.stdout not in wifi_country  or current_wifi_country.rc == 1

  #   tags:
  #     - wifi_country

  # .............................................
  - block: 
  
    - name: Turn off WiFi
      become: true
      ansible.builtin.command: 
        cmd: "rfkill block wifi"
      changed_when: False
      ignore_errors: True

    tags:
      - wifi_off

   



  when:
    - ansible_os_family == "Debian" 
    - vars['ansible_distribution_release'] == 'buster'
    - vars['ansible_machine'] == 'aarch64'
  #tags:
  #  - cgroup
